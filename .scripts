Installation scripts
(SQL scripts for database creation and test data, build scripts (maven),
deployment and configuration instructions).

DB scripts:

Create the data base:

CREATE DATABASE onlineshop;

Create the tables:

CUSTOMER:


CREATE TABLE CUSTOMER (
    CUSTOMER_ID int PRIMARY KEY NOT NULL AUTO_INCREMENT,
    PHONE_NO int,
    FIRST_NAME varchar(45),
    LAST_NAME varchar(45),
    EMAIL varchar(45),
    PASSWORD varchar(45),
    ADDRESS varchar(45)
    );

CREATE TABLE CUST_PAYMENT_METHOD (
    PAYMENT_ID int PRIMARY KEY NOT NULL AUTO_INCREMENT,
    CUSTOMER_ID int,
    CREDIT_CARD_NO varchar(45),
    CASH_ON_DELIVERY boolean,
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID)
    );


CREATE TABLE ORDER_STATUS_CODE (
    ORDER_STATUS_CODE int PRIMARY KEY NOT NULL AUTO_INCREMENT,
    DESCRIPTION varchar(45)
    );


CREATE TABLE CUST_ORDER (
     ORDER_ID int PRIMARY KEY NOT NULL AUTO_INCREMENT,
     CUSTOMER_ID int,
     ORDER_STATUS_CODE int,
     DETAILS varchar(45),
     DATE timestamp,
     FOREIGN KEY (ORDER_STATUS_CODE) REFERENCES ORDER_STATUS_CODE(ORDER_STATUS_CODE),
     FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID)
     );


 CREATE TABLE INVOICE_STATUS_CODE (
         INVOICE_STATUS_CODE int PRIMARY KEY NOT NULL AUTO_INCREMENT,
         DESCRIPTION varchar(45)
         );



 CREATE TABLE INVOICE (
    INVOICE_NO int PRIMARY KEY NOT NULL AUTO_INCREMENT,
    ORDER_ID int,
    INVOICE_STATUS_CODE int,
    DATE timestamp,
    DETAILS varchar(45),
    FOREIGN KEY (ORDER_ID) REFERENCES CUST_ORDER(ORDER_ID),
    FOREIGN KEY (INVOICE_STATUS_CODE) REFERENCES INVOICE_STATUS_CODE(INVOICE_STATUS_CODE)
    );



 CREATE TABLE PRODUCT_TYPE (
    PRODUCT_TYPE varchar(45) PRIMARY KEY NOT NULL
    );


  CREATE TABLE ORDER_ITEM_STATUS_CODE (
     ORDER_ITEM_STATUS_CODE int PRIMARY KEY NOT NULL AUTO_INCREMENT,
     DESCRIPTION varchar(45)
     );


  CREATE TABLE PRODUCT (
      PRODUCT_ID int PRIMARY KEY NOT NULL AUTO_INCREMENT,
      TYPE varchar(45),
      MAKER varchar(45),
      NAME varchar(45),
      COLOR varchar(45),
      SIZE int,
      PRICE double,
      DESCRIPTION varchar(45)
      );




 CREATE TABLE ORDER_ITEM (
        ITEM_ID int PRIMARY KEY NOT NULL AUTO_INCREMENT,
        PRODUCT_ID int,
        ORDER_ID int,
        ORDER_ITEM_STATUS_CODE int,
        QUANTITY int,
        PRICE double,
        FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID),
        FOREIGN KEY (ORDER_ID) REFERENCES CUST_ORDER(ORDER_ID),
        FOREIGN KEY (ORDER_ITEM_STATUS_CODE) REFERENCES ORDER_ITEM_STATUS_CODE(ORDER_ITEM_STATUS_CODE)
        );



CREATE TABLE PAYMENT (
	PAYMENT_ID int PRIMARY KEY NOT NULL AUTO_INCREMENT,
    INVOICE_NO int,
    AMOUNT int,
    DATE TIMESTAMP,
    FOREIGN KEY (INVOICE_NO) REFERENCES INVOICE(INVOICE_NO)
    );


CREATE TABLE SHIPMENT (
	SHIPMENT_ID int PRIMARY KEY NOT NULL AUTO_INCREMENT,
	ORDER_ID int,
    INVOICE_NO int,
    TRACKING_NO int,
    SHIPMENT_DATE timestamp,
    DETAILS varchar(45),
    FOREIGN KEY (ORDER_ID) REFERENCES CUST_ORDER(ORDER_ID),
    FOREIGN KEY (INVOICE_NO) REFERENCES INVOICE(INVOICE_NO)
    );

INSERT INTO product_type (PRODUCT_TYPE)
VALUES ('TV');

INSERT INTO product_type (PRODUCT_TYPE)
VALUES ('Photo camera');

INSERT INTO product_type (PRODUCT_TYPE)
VALUES ('Mobile Phone');

INSERT INTO product_type (PRODUCT_TYPE)
VALUES ('Laptop');